#include <iostream>
#define MAX(x, y) (((x) > (y))? (x): (y))
#define MIN(x, y) (((x) < (y))? (x): (y))

int min(int, int);
int max(int, int);

int main()
{
	int x1 = 3, x2 = 3;
	int y1 = 5, y2 = 5;

	//сравнение при помощи макросов

	//случай №1: при передаче аргументов в макрос MIN при значениях х1 = 3 и у1 = 5 в сравнение попадает значения 3 и 5 так как х1 имеет постфиксный инкримент,
	//после чего х1 увеличивается на 1, а уже после тернарного оператора, где значение х1 будет истинным, х1 инкрементируется до 5 
	//это можно проверить выводом значений х1 и у1 на консоль вывода
	std::cout << "MIN(x1++, y1) = " << MIN(x1++, y1) << std::endl;
	std::cout << "x1 = " << x1 << ", y1 = " << y1 << std::endl;

	//случай №2: при втором сравнении минимального значения между х1 и у1 в макрос передается префиксный инкримент х1(тоесть 6) и в сравнении с у1 возращает у1 со знаечение 5
	std::cout << "MIN(++x1, y1) = " << MIN(++x1, y1) << std::endl;
	std::cout << "x1 = " << x1 << ", y1 = " << y1 << std::endl;

	//в последующий сравнениях между х1 и у1, будет возвращатся дважды инкрементированное значение х1 (8, 10 соответственно) так как х1 во всех случая больше у1
	std::cout << "MAX(x1++, y1) = " << MAX(x1++, y1) << std::endl;
	std::cout << "x1 = " << x1 << ", y1 = " << y1 << std::endl;
	std::cout << "MAX(++x1, y1) = " << MAX(++x1, y1) << std::endl;
	std::cout << "x1 = " << x1 << ", y1 = " << y1 << std::endl;


	//сравнение х и у при помощи функций
	std::cout << "x2 = " << x2 << ", y2 = " << y2 << std::endl;
	//случай №1: в функцию передается префиксный инкримент х2 и обычная переменная у2, функция вернет ++х2 со значением 4
	std::cout << "min(++x2, y2) = " << min(++x2, y2) << std::endl;
	std::cout << "x2 = " << x2 << ", y2 = " << y2 << std::endl;

	//случай №2: во втором случае агрументу х в функции min присвоится значение 4, так как постфиксный инкримент имеет меньший приоритет чем операция присваивания
	//результатом функции будет 4, а оригинал х2 после функции получит значение 5
	std::cout << "min(x2++, y2) = " << min(x2++, y2) << std::endl;
	std::cout << "x2 = " << x2 << ", y2 = " << y2 << std::endl;

	//случай №3: аналогично с предыдушей ситуацией, в аргументы функции мах попадут значения 5 и 5, а так как 5 не больше 5, вернется значение аргумента у
	// после чего значение х2 инкриментируется
	std::cout << "max(x2++, y2) = " << max(x2++, y2) << std::endl;
	std::cout << "x2 = " << x2 << ", y2 = " << y2 << std::endl;

	//в последнем примере аргументы получат 7 и 5 соответсвенно (префиксный инкримент имеет приоритет перед операцией присваивания)
	//результатом будет 7
	std::cout << "max(++x2, y2) = " << max(++x2, y2) << std::endl;
	std::cout << "x2 = " << x2 << ", y2 = " << y2 << std::endl;

	return 0;
}

int min(int x, int y)
{
	return x < y ? x : y;
}

int max(int x, int y)
{
	return x > y ? x : y;
}